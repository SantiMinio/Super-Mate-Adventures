using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class InvulnerabilityCard : CardModel
{
    [SerializeField] LifeRequirement lifeRequirement = new LifeRequirement();
    //[SerializeField] LastCardRequirement lastCardRequirement = new LastCardRequirement();
    [SerializeField] int damageAdd = 6;
    [SerializeField] float buffTime = 5;
    [SerializeField] AudioClip sound = null;
    [SerializeField] ParticleSystem ps;
    private void Awake()
    {
        myRequirements.Add(lifeRequirement);
        AudioManager.instance.GetSoundPool(sound.name, AudioManager.SoundDimesion.ThreeD, sound);
    }

    public override Requirement GetRequire() => lifeRequirement;

    public override void RangeFeedback()
    {
    }

    public override void ResetCard()
    {

    }

    protected override bool OnCanUse()
    {
        if (Main.instance.GetMainCharacter.GetComponent<LifeHandler>().Invulnerability)
        {
            UIManager.instance.DisplayDialog("Ya sos invulnerable!!");
            return false;
        }
        else return true;
    }

    protected override void OnUseCard()
    {
        Main.instance.GetMainCharacter.AddDamage(damageAdd);
        Main.instance.GetMainCharacter.GetComponent<LifeHandler>().ChangeInvulnerability(true);
        AudioManager.instance.PlaySound(sound.name);
        ps.Play();
        ps.transform.parent = null;

        StartCoroutine(WaitSeconds());
    }

    IEnumerator WaitSeconds()
    {
        yield return new WaitForSeconds(buffTime);

        Main.instance.GetMainCharacter.ResetDamageValue();
        Main.instance.GetMainCharacter.GetComponent<LifeHandler>().ChangeInvulnerability(false);
        Destroy(this.gameObject);
    }
}
